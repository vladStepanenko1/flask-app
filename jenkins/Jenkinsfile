pipeline{
    agent any
    environment{
        PROJECT_ID = 'flask-app-318214'
        LOCAL_TAG = "flask-app:${env.BUILD_NUMBER}"
        REMOTE_TAG = "eu.gcr.io/$PROJECT_ID/$LOCAL_TAG"
        CONTAINER_NAME = 'flask-app'
        GC_SDK_IMAGE = 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
        VM_NAME = 'flask-app-vm'
        VM_ZONE = 'europe-west3-a'
    }
    stages{
        stage('Checkout'){
            steps{
                git 'https://github.com/vladStepanenko1/flask-app.git'
            }
        }
        stage('Build docker image'){
            steps{
                script{
                    appImage = docker.build(LOCAL_TAG, '-f ./docker/Dockerfile .')
                }
            }
        }
        stage('Test'){
            steps{
                script{
                    appImage.inside{
                        sh 'python tests.py'
                    }
                }
            }
        }
        stage('Push docker image'){
            agent{
                docker{
                    image '$GC_SDK_IMAGE'
                }
            }
            steps{
                withCredentials([file(credentialsId: 'flask-app-key', variable: 'GC_KEY')]){
                    sh 'cat $GC_KEY | docker login -u _json_key --password-stdin https://eu.gcr.io'
                    sh 'gcloud auth activate-service-account --key-file=$GC_KEY'
                    sh 'gcloud auth configure-docker'
                    echo 'Pushing $LOCAL_TAG image to container registry'
                    sh 'docker tag $LOCAL_TAG $REMOTE_TAG'
                    sh 'docker push $REMOTE_TAG'
                }
            }
        }
        stage('Deploy'){
            agent{
                docker{
                    image '$GC_SDK_IMAGE'
                }
            }
            steps{
                withCredentials([file(credentialsId: 'flask-app-key', variable: 'GC_KEY')]){
                    sh 'gcloud auth activate-service-account --key-file=$GC_KEY'
                    sh '''gcloud compute ssh $VM_NAME \
                            --zone=$VM_ZONE \
                            --project $PROJECT_ID \
                            --command="docker-credential-gcr configure-docker"'''
                    sh '''gcloud compute ssh $VM_NAME \
                            --zone=$VM_ZONE \
                            --project $PROJECT_ID \
                            --command="docker pull $REMOTE_TAG"'''
                    sh '''gcloud compute ssh $VM_NAME \
                            --zone=$VM_ZONE  \
                            --project $PROJECT_ID \
                            --command="docker container stop $CONTAINER_NAME && docker container rm $CONTAINER_NAME || exit 0;"'''
                    sh '''gcloud compute ssh $VM_NAME \
                            --zone=$VM_ZONE \
                            --project $PROJECT_ID \
                            --command="docker run --name=$CONTAINER_NAME --restart=unless-stopped -d -p 80:5000 $REMOTE_TAG"'''
                }
            }
        }
    }
}